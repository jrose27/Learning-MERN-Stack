{"ast":null,"code":"import _defineProperty from \"/Users/jrose/Documents/MERN-Stack/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport uuid from 'uuid';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from '../actions/types'; // items will come from backend\n\nconst intialState = {\n  items: [{\n    id: uuid(),\n    name: 'Eggs'\n  }, {\n    id: uuid(),\n    name: 'Milk'\n  }, {\n    id: uuid(),\n    name: 'Steak'\n  }, {\n    id: uuid(),\n    name: 'Water'\n  }]\n};\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return _objectSpread({}, state);\n\n    case DELETE_ITEM:\n      return _objectSpread({}, state, {\n        items: state.items.filter(item => item.id !== id)\n      });\n\n    default:\n      return state;\n  } // Closes switch\n\n} // Closes export function","map":{"version":3,"sources":["/Users/jrose/Documents/MERN-Stack/client/src/reducers/itemReducer.js"],"names":["uuid","GET_ITEMS","ADD_ITEM","DELETE_ITEM","intialState","items","id","name","state","action","type","filter","item"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,kBAAjD,C,CAEA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GADK,EAEL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,IAAI,EAAE;AAApB,GAJK;AADW,CAApB;AASA,eAAe,UAASC,KAAK,GAAGJ,WAAjB,EAA8BK,MAA9B,EAAsC;AACnD,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAKT,SAAL;AACE,+BACKO,KADL;;AAIF,SAAKL,WAAL;AACE,+BACKK,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAvC;AAFT;;AAKF;AACE,aAAOE,KAAP;AAdJ,GADmD,CAiBjD;;AACH,C,CAAC","sourcesContent":["import uuid from 'uuid';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from '../actions/types';\n\n// items will come from backend\nconst intialState = {\n  items: [\n    { id: uuid(), name: 'Eggs' },\n    { id: uuid(), name: 'Milk' },\n    { id: uuid(), name: 'Steak' },\n    { id: uuid(), name: 'Water' }\n  ]\n}\n\nexport default function(state = intialState, action) {\n  switch(action.type) {\n\n    case GET_ITEMS:\n      return {\n        ...state\n      };\n\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== id)\n      };\n\n    default:\n      return state;\n\n  } // Closes switch\n} // Closes export function\n"]},"metadata":{},"sourceType":"module"}